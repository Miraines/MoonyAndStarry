version: "3.8"
services:
  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: 3936570359az
      POSTGRES_DB: appdb
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "25433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U appuser -d appdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    command: ["redis-server", "--requirepass", ""]
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "PING"]
      interval: 10s
      timeout: 5s
      retries: 5

  auth:
    build:
      context: ..
      dockerfile: deploy/Dockerfile
    working_dir: /app
    environment:
      DATABASE_URL: postgres://appuser:3936570359az@postgres:5432/appdb?sslmode=disable
      JWT_PRIVATE_KEY_PATH: /app/keys/jwt_private.pem
      JWT_PUBLIC_KEY_PATH: /app/keys/jwt_public.pem
      HTTPS_CERT_FILE: /app/certs/server.crt
      HTTPS_KEY_FILE: /app/certs/server.key
      ACCESS_TOKEN_TTL: 15m
      REFRESH_TOKEN_TTL: 24h
      REDIS_ADDRESS: redis:6379
      REDIS_PASSWORD: ""
      REDIS_DB: 0
      PASSWORD_PEPPER: Miraines
      JWT_ISSUER: auth-service
      JWT_AUDIENCE: moonandstarry-api
      GRPC_ADDRESS: :50051
      TELEGRAM_BOT_TOKEN: ""
      LOG_LEVEL: debug
      ALLOWED_ORIGINS: |
        https://t.me,
        https://oauth.telegram.org,
        https://web.telegram.org,
        https://miraines.github.io
        https://7b4f-84-19-3-112.ngrok-free.app
    ports:
      - "8080:8080"
      - "50051:50051"
    volumes:
      - ../configs/config.json:/app/config.json:ro
      - ../keys:/app/keys:ro
      - ../certs:/app/certs:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
volumes:
  db-data: